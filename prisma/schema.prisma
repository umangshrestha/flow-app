// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Instructor {
  id           String     @id @unique
  email        String     @unique
  fullName     String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  flows        Flow[]
}

model Faculty {
  id          Int          @id @default(autoincrement())
  faculty     String       @unique
  departments Department[]
}

model Department {
  id          Int          @id @default(autoincrement())
  department  String       @unique
  instructors Instructor[]
  faculty     Faculty      @relation(fields: [facultyId], references: [id])
  facultyId   Int
}

model Flow {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  createdBy   String
  topics      Topic[]
  description String
  location    String     @default("BBCafe")
  tags        Tag[]
  instructor  Instructor @relation(fields: [uwinId], references: [id])
  uwinId      String
}

model Tag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tag       String   @unique
  topics    Topic[]
  flows     Flow[]
  form      Form[]
}

model Topic {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  topic       String        @unique
  links       Link[]
  flows       Flow[]
  formElement FormSection[]
  tag         Tag           @relation(fields: [tagId], references: [id])
  tagId       Int
}

model Link {
  id          Int    @id @default(autoincrement())
  link        String
  description String
  majorTopic  Topic? @relation(fields: [topicId], references: [id])
  topicId     Int?
}

model Form {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  isDefault   Boolean       @default(false)
  sections    FormSection[]
  tag         Tag?          @relation(fields: [tagId], references: [id])
  tagId       Int?
}

model FormSection {
  id          Int     @id @default(autoincrement())
  Form        Form?   @relation(fields: [formId], references: [id])
  formId      Int?
  formType    String
  placeholder String
  isRequired  String
  helpInfo    String
  items       Topic[]
}
