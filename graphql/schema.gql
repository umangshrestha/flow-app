# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Hello {
  name: ID!
}

type DepartmentEntity {
  id: Int!
  department: ID!
  faculty: FacultyEntity!
}

type FacultyEntity {
  id: Int
  faculty: ID
  code: ID
  departments: [DepartmentEntity!]
}

type TopicEntity {
  id: Int
  topic: ID
  createdAt: DateTime
  updatedAt: DateTime
  tag: TagEntity
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type TagEntity {
  id: Int
  tag: ID
  createdAt: DateTime
  updatedAt: DateTime
  topics: [TopicEntity!]
}

type InstructorEntity {
  id: ID!
  email: ID!
  fullName: ID!
  department: DepartmentEntity!
}

type FormSection {
  id: Int!
  formType: ID!
  paceholder: ID!
  isRequred: Boolean!
  helpInfo: ID!
  items: [ID!]!
}

type Form {
  id: Int!
  name: ID!
  description: ID!
  parentTopic: ID!
  isDefault: Boolean!
  sections: [FormSection!]!
}

type FlowEntity {
  id: Int!
  createdBy: ID!
  topics: [TopicEntity!]!
  description: ID!
  tags: [TagEntity!]!
  uwinID: ID!
}

type Query {
  hello(name: String!): Hello!
  helloWorld: String!
  facultys(query: QueryInput): [FacultyEntity!]!
  faculty(id: Int!): FacultyEntity!
  departments(query: QueryInput): [DepartmentEntity!]!
  department(id: Int!): DepartmentEntity!
  tags(query: QueryInput): [TagEntity!]!
  tag(id: Int!): TagEntity!
  topics(query: QueryInput): [TopicEntity!]!
  topic(id: Int!): TopicEntity!
  forms(query: QueryInput): [Form!]!
  form(id: Int!): Form!
  instructors(query: QueryInput): [InstructorEntity!]!
  instructor(id: ID!): InstructorEntity!
  flows(query: QueryInput): [FlowEntity!]!
  flow(id: Int!): FlowEntity!
}

input QueryInput {
  skip: Int = 0
  take: Int = 50
  orderBy: ID = "id"
  sortOrder: Order = ASC
}

enum Order {
  ASC
  DESC
}

type Mutation {
  createFaculty(faculty: String!): FacultyEntity!
  updateFaculty(update: UpdateFacultyInput!): FacultyEntity!
  removeFaculty(id: Int!): FacultyEntity!
  createDepartment(create: CreateDepartmentInput!): DepartmentEntity!
  updateDepartment(update: UpdateDepartmentInput!): DepartmentEntity!
  removeDepartment(id: Int!): DepartmentEntity!
  createTag(tag: String!): TagEntity!
  updateTag(update: UpdateTagInput!): TagEntity!
  removeTag(id: Int!): TagEntity!
  createTopic(create: CreateTopicInput!): TopicEntity!
  updateTopic(update: UpdateTopicInput!): TopicEntity!
  removeTopic(id: Int!): TopicEntity!
  createForm(createFormInput: CreateFormInput!): Form!
  updateForm(update: UpdateFormInput!): Form!
  removeForm(id: Int!): Form!
  updateFormSection(update: UpdateFormSectionInput!): FormSection!
  removeFormSection(id: Int!): FormSection!
  createInstructor(create: CreateInstructorInput!): InstructorEntity!
  updateInstructor(update: UpdateInstructorInput!): InstructorEntity!
  removeInstructor(id: ID!): InstructorEntity!
  createFlow(create: CreateFlowInput!): FlowEntity!
  updateFlow(update: UpdateFlowInput!): FlowEntity!
  removeFlow(id: Int!): FlowEntity!
}

input UpdateFacultyInput {
  id: Int!
  faculty: ID!
}

input CreateDepartmentInput {
  department: ID!
  faculty: ID = "Unknown"
}

input UpdateDepartmentInput {
  department: ID!
  faculty: ID = "Unknown"
  id: Int!
}

input UpdateTagInput {
  id: Int!
  tag: ID!
}

input CreateTopicInput {
  topic: ID!
  tag: ID = "Brightspace"
}

input UpdateTopicInput {
  topic: ID
  tag: ID!
  id: Int!
}

input CreateFormInput {
  name: ID!
  description: ID!
  tag: ID = "Brightspace"
  isDefault: Boolean!
  sections: [CreateFormSectionInput!]!
}

input CreateFormSectionInput {
  formType: ID!
  paceholder: ID!
  isRequred: Boolean!
  helpInfo: ID!
  items: [ID!]!
}

input UpdateFormInput {
  name: ID
  description: ID
  tag: ID = "Brightspace"
  isDefault: Boolean
  sections: [CreateFormSectionInput!]
  id: Int!
}

input UpdateFormSectionInput {
  formType: ID
  paceholder: ID
  isRequred: Boolean
  helpInfo: ID
  items: [ID!]
  id: Int!
  tag: ID
}

input CreateInstructorInput {
  id: ID!
  department: ID = "Unknown"
  email: ID!
  fullName: ID!
}

input UpdateInstructorInput {
  id: ID!
  department: ID = "Unknown"
  email: ID!
  fullName: ID!
}

input CreateFlowInput {
  createdBy: ID!
  topics: [ID!]!
  description: ID!
  tags: [ID!]!
  uwinID: ID!
  location: ID = "BB Cafe"
}

input UpdateFlowInput {
  createdBy: ID!
  topics: [ID!]!
  description: ID!
  tags: [ID!]!
  uwinID: ID!
  location: ID = "BB Cafe"
  id: Int!
}