# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ParentTopic {
  id: Int
  topic: ID
  createdAt: DateTime
  updatedAt: DateTime
  majorTopics: [Topic!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Topic {
  id: Int
  topic: ID
  createdAt: DateTime
  updatedAt: DateTime
  parentTopic: ParentTopic
}

type Hello {
  name: ID!
}

type Department {
  id: Int
  department: ID!
  createdAt: DateTime
  updatedAt: DateTime
  faculty: Faculty
}

type Faculty {
  id: Int
  faculty: ID
  createdAt: DateTime
  updatedAt: DateTime
  departments: [Department!]
}

type Query {
  topics(query: QueryInput): [Topic!]!
  topic(id: Int!): Topic!
  hello(name: String!): Hello!
  helloWorld: String!
  facultys(query: QueryInput): [Faculty!]!
  faculty(id: Int!): Faculty!
  departments(query: QueryInput): [Department!]!
  department(id: Int!): Department!
  parentTopics(query: QueryInput): [ParentTopic!]!
  parentTopic(id: Int!): ParentTopic!
}

input QueryInput {
  skip: ID = 0
  take: ID = 50
  orderBy: ID = "id"
  sortOrder: Order = ASC
}

enum Order {
  ASC
  DESC
}

type Mutation {
  createTopic(create: CreateTopicInput!): Topic!
  updateTopic(update: UpdateTopicInput!): Topic!
  removeTopic(id: Int!): Topic!
  createFaculty(create: CreateFacultyInput!): Faculty!
  updateFaculty(update: UpdateFacultyInput!): Faculty!
  removeFaculty(id: Int!): Faculty!
  createDepartment(create: CreateDepartmentInput!): Department!
  updateDepartment(update: UpdateDepartmentInput!): Department!
  removeDepartment(id: Int!): Department!
  createParentTopic(create: CreateParentTopicInput!): ParentTopic!
  updateParentTopic(update: UpdateParentTopicInput!): ParentTopic!
  removeParentTopic(id: Int!): ParentTopic!
}

input CreateTopicInput {
  topic: ID!
  parentTopic: ID!
}

input UpdateTopicInput {
  topic: ID
  parentTopic: ID
  id: Int!
}

input CreateFacultyInput {
  faculty: ID!
}

input UpdateFacultyInput {
  faculty: ID!
  id: Int!
}

input CreateDepartmentInput {
  department: ID!
  faculty: ID!
}

input UpdateDepartmentInput {
  department: ID!
  faculty: ID!
  id: Int!
}

input CreateParentTopicInput {
  topic: ID!
}

input UpdateParentTopicInput {
  topic: ID
  id: Int!
}